/* The content of this file was generated using a modified C profile of libCellML 0.5.0. */

double xor(double x, double y)
{
    return (x != 0.0) ^ (y != 0.0);
}

double min(double x, double y)
{
    return (x < y)?x:y;
}

double max(double x, double y)
{
    return (x > y)?x:y;
}

double sec(double x)
{
    return 1.0/cos(x);
}

double csc(double x)
{
    return 1.0/sin(x);
}

double cot(double x)
{
    return 1.0/tan(x);
}

double sech(double x)
{
    return 1.0/cosh(x);
}

double csch(double x)
{
    return 1.0/sinh(x);
}

double coth(double x)
{
    return 1.0/tanh(x);
}

double asec(double x)
{
    return acos(1.0/x);
}

double acsc(double x)
{
    return asin(1.0/x);
}

double acot(double x)
{
    return atan(1.0/x);
}

double asech(double x)
{
    double oneOverX = 1.0/x;

    return log(oneOverX+sqrt(oneOverX*oneOverX-1.0));
}

double acsch(double x)
{
    double oneOverX = 1.0/x;

    return log(oneOverX+sqrt(oneOverX*oneOverX+1.0));
}

double acoth(double x)
{
    double oneOverX = 1.0/x;

    return 0.5*log((1.0+oneOverX)/(1.0-oneOverX));
}

double * createStatesArray()
{
    double *res = (double *) malloc(STATE_COUNT*sizeof(double));

    for (size_t i = 0; i < STATE_COUNT; ++i) {
        res[i] = NAN;
    }

    return res;
}

double * createVariablesArray()
{
    double *res = (double *) malloc(VARIABLE_COUNT*sizeof(double));

    for (size_t i = 0; i < VARIABLE_COUNT; ++i) {
        res[i] = NAN;
    }

    return res;
}

void deleteArray(double *array)
{
    free(array);
}

typedef struct {
    double voi;
    double *states;
    double *rates;
    double *variables;
} RootFindingInfo;

extern void nlaSolve(void (*objectiveFunction)(double *, double *, void *),
                     double *u, size_t n, void *data);

void objectiveFunction0(double *u, double *f, void *data)
{
    double voi = ((RootFindingInfo *) data)->voi;
    double *states = ((RootFindingInfo *) data)->states;
    double *rates = ((RootFindingInfo *) data)->rates;
    double *variables = ((RootFindingInfo *) data)->variables;

    algebraic[205] = u[0];
    algebraic[206] = u[1];

    f[0] = algebraic[205]+algebraic[206]+states[0]-0.0;
    f[1] = algebraic[205]-algebraic[206]-(computedConstants[207]+computedConstants[208]);
}

void findRoot0(double voi, double *states, double *rates, double *variables)
{
    RootFindingInfo rfi = { voi, states, rates, variables };
    double u[2];

    u[0] = algebraic[205];
    u[1] = algebraic[206];

    nlaSolve(objectiveFunction0, u, 2, &rfi);

    algebraic[205] = u[0];
    algebraic[206] = u[1];
}

void initialiseVariables(double *states, double *rates, double *constants)
{
    constants[1] = 1.0;
    constants[2] = 2.0;
    constants[6] = 3.0;
    constants[18] = 4.0;
    constants[179] = 5.0;
    constants[180] = 6.0;
    constants[182] = 7.0;
    algebraic[205] = 1.0;
    algebraic[206] = 2.0;
    computedConstants[184] = 123.0;
    computedConstants[185] = 123.456789;
    computedConstants[186] = 123.0e99;
    computedConstants[187] = 123.456789e99;
    computedConstants[189] = 1.0;
    computedConstants[190] = 0.0;
    computedConstants[191] = 2.71828182845905;
    computedConstants[192] = 3.14159265358979;
    computedConstants[193] = INFINITY;
    computedConstants[194] = NAN;
    computedConstants[207] = 1.0;
    computedConstants[208] = 3.0;
    states[0] = 0.0;
}

void computeComputedConstants(double *constants, double *computedConstants)
{
    computedConstants[0] = eq(constants[1], constants[2]);
    computedConstants[3] = constants[1]/eq(constants[2], constants[2]);
    computedConstants[4] = neq(constants[1], constants[2]);
    computedConstants[5] = constants[1]/neq(constants[2], constants[6]);
    computedConstants[7] = lt(constants[1], constants[2]);
    computedConstants[8] = constants[1]/lt(constants[2], constants[6]);
    computedConstants[9] = leq(constants[1], constants[2]);
    computedConstants[10] = constants[1]/leq(constants[2], constants[6]);
    computedConstants[11] = gt(constants[1], constants[2]);
    computedConstants[12] = constants[1]/gt(constants[2], constants[6]);
    computedConstants[13] = geq(constants[1], constants[2]);
    computedConstants[14] = constants[1]/geq(constants[2], constants[6]);
    computedConstants[15] = and(constants[1], constants[2]);
    computedConstants[16] = and(constants[1], and(constants[2], constants[6]));
    computedConstants[17] = and(lt(constants[1], constants[2]), gt(constants[6], constants[18]));
    computedConstants[19] = and(constants[1]+constants[2], gt(constants[6], constants[18]));
    computedConstants[20] = and(constants[1], gt(constants[2], constants[6]));
    computedConstants[21] = and(constants[1]-constants[2], gt(constants[6], constants[18]));
    computedConstants[22] = and(-constants[1], gt(constants[2], constants[6]));
    computedConstants[23] = and(pow(constants[1], constants[2]), gt(constants[6], constants[18]));
    computedConstants[24] = and(pow(constants[1], 1.0/constants[2]), gt(constants[6], constants[18]));
    computedConstants[25] = and(lt(constants[1], constants[2]), constants[6]+constants[18]);
    computedConstants[26] = and(lt(constants[1], constants[2]), constants[6]);
    computedConstants[27] = and(lt(constants[1], constants[2]), constants[6]-constants[18]);
    computedConstants[28] = and(lt(constants[1], constants[2]), -constants[6]);
    computedConstants[29] = and(lt(constants[1], constants[2]), pow(constants[6], constants[18]));
    computedConstants[30] = and(lt(constants[1], constants[2]), pow(constants[6], 1.0/constants[18]));
    computedConstants[31] = constants[1]/and(constants[2], constants[6]);
    computedConstants[32] = or(constants[1], constants[2]);
    computedConstants[33] = or(constants[1], or(constants[2], constants[6]));
    computedConstants[34] = or(lt(constants[1], constants[2]), gt(constants[6], constants[18]));
    computedConstants[35] = or(constants[1]+constants[2], gt(constants[6], constants[18]));
    computedConstants[36] = or(constants[1], gt(constants[2], constants[6]));
    computedConstants[37] = or(constants[1]-constants[2], gt(constants[6], constants[18]));
    computedConstants[38] = or(-constants[1], gt(constants[2], constants[6]));
    computedConstants[39] = or(pow(constants[1], constants[2]), gt(constants[6], constants[18]));
    computedConstants[40] = or(pow(constants[1], 1.0/constants[2]), gt(constants[6], constants[18]));
    computedConstants[41] = or(lt(constants[1], constants[2]), constants[6]+constants[18]);
    computedConstants[42] = or(lt(constants[1], constants[2]), constants[6]);
    computedConstants[43] = or(lt(constants[1], constants[2]), constants[6]-constants[18]);
    computedConstants[44] = or(lt(constants[1], constants[2]), -constants[6]);
    computedConstants[45] = or(lt(constants[1], constants[2]), pow(constants[6], constants[18]));
    computedConstants[46] = or(lt(constants[1], constants[2]), pow(constants[6], 1.0/constants[18]));
    computedConstants[47] = constants[1]/or(constants[2], constants[6]);
    computedConstants[48] = xor(constants[1], constants[2]);
    computedConstants[49] = xor(constants[1], xor(constants[2], constants[6]));
    computedConstants[50] = xor(lt(constants[1], constants[2]), gt(constants[6], constants[18]));
    computedConstants[51] = xor(constants[1]+constants[2], gt(constants[6], constants[18]));
    computedConstants[52] = xor(constants[1], gt(constants[2], constants[6]));
    computedConstants[53] = xor(constants[1]-constants[2], gt(constants[6], constants[18]));
    computedConstants[54] = xor(-constants[1], gt(constants[2], constants[6]));
    computedConstants[55] = xor(pow(constants[1], constants[2]), gt(constants[6], constants[18]));
    computedConstants[56] = xor(pow(constants[1], 1.0/constants[2]), gt(constants[6], constants[18]));
    computedConstants[57] = xor(lt(constants[1], constants[2]), constants[6]+constants[18]);
    computedConstants[58] = xor(lt(constants[1], constants[2]), constants[6]);
    computedConstants[59] = xor(lt(constants[1], constants[2]), constants[6]-constants[18]);
    computedConstants[60] = xor(lt(constants[1], constants[2]), -constants[6]);
    computedConstants[61] = xor(lt(constants[1], constants[2]), pow(constants[6], constants[18]));
    computedConstants[62] = xor(lt(constants[1], constants[2]), pow(constants[6], 1.0/constants[18]));
    computedConstants[63] = constants[1]/xor(constants[2], constants[6]);
    computedConstants[64] = not(constants[1]);
    computedConstants[65] = constants[1]+constants[2];
    computedConstants[66] = constants[1]+constants[2]+constants[6];
    computedConstants[67] = lt(constants[1], constants[2])+gt(constants[6], constants[18]);
    computedConstants[68] = constants[1];
    computedConstants[69] = constants[1]-constants[2];
    computedConstants[70] = lt(constants[1], constants[2])-gt(constants[6], constants[18]);
    computedConstants[71] = lt(constants[1], constants[2])-(constants[6]+constants[18]);
    computedConstants[72] = lt(constants[1], constants[2])-constants[6];
    computedConstants[73] = constants[1]-(-constants[2]);
    computedConstants[74] = constants[1]-(-constants[2]*constants[6]);
    computedConstants[75] = -constants[1];
    computedConstants[76] = -lt(constants[1], constants[2]);
    computedConstants[77] = constants[1]*constants[2];
    computedConstants[78] = constants[1]*constants[2]*constants[6];
    computedConstants[79] = lt(constants[1], constants[2])*gt(constants[6], constants[18]);
    computedConstants[80] = (constants[1]+constants[2])*gt(constants[6], constants[18]);
    computedConstants[81] = constants[1]*gt(constants[2], constants[6]);
    computedConstants[82] = (constants[1]-constants[2])*gt(constants[6], constants[18]);
    computedConstants[83] = -constants[1]*gt(constants[2], constants[6]);
    computedConstants[84] = lt(constants[1], constants[2])*(constants[6]+constants[18]);
    computedConstants[85] = lt(constants[1], constants[2])*constants[6];
    computedConstants[86] = lt(constants[1], constants[2])*(constants[6]-constants[18]);
    computedConstants[87] = lt(constants[1], constants[2])*-constants[6];
    computedConstants[88] = constants[1]/constants[2];
    computedConstants[89] = lt(constants[1], constants[2])/gt(constants[18], constants[6]);
    computedConstants[90] = (constants[1]+constants[2])/gt(constants[18], constants[6]);
    computedConstants[91] = constants[1]/gt(constants[6], constants[2]);
    computedConstants[92] = (constants[1]-constants[2])/gt(constants[18], constants[6]);
    computedConstants[93] = -constants[1]/gt(constants[6], constants[2]);
    computedConstants[94] = lt(constants[1], constants[2])/(constants[6]+constants[18]);
    computedConstants[95] = lt(constants[1], constants[2])/constants[6];
    computedConstants[96] = lt(constants[1], constants[2])/(constants[6]-constants[18]);
    computedConstants[97] = lt(constants[1], constants[2])/-constants[6];
    computedConstants[98] = lt(constants[1], constants[2])/(constants[6]*constants[18]);
    computedConstants[99] = lt(constants[1], constants[2])/(constants[6]/constants[18]);
    computedConstants[100] = sqrt(constants[1]);
    computedConstants[101] = pow(constants[1], 2.0);
    computedConstants[102] = pow(constants[1], 3.0);
    computedConstants[103] = pow(constants[1], constants[2]);
    computedConstants[104] = pow(leq(constants[1], constants[2]), geq(constants[6], constants[18]));
    computedConstants[105] = pow(constants[1]+constants[2], geq(constants[6], constants[18]));
    computedConstants[106] = pow(constants[1], geq(constants[2], constants[6]));
    computedConstants[107] = pow(constants[1]-constants[2], geq(constants[6], constants[18]));
    computedConstants[108] = pow(-constants[1], geq(constants[2], constants[6]));
    computedConstants[109] = pow(constants[1]*constants[2], geq(constants[6], constants[18]));
    computedConstants[110] = pow(constants[1]/constants[2], geq(constants[6], constants[18]));
    computedConstants[111] = pow(leq(constants[1], constants[2]), constants[6]+constants[18]);
    computedConstants[112] = pow(leq(constants[1], constants[2]), constants[6]);
    computedConstants[113] = pow(leq(constants[1], constants[2]), constants[6]-constants[18]);
    computedConstants[114] = pow(leq(constants[1], constants[2]), -constants[6]);
    computedConstants[115] = pow(leq(constants[1], constants[2]), constants[6]*constants[18]);
    computedConstants[116] = pow(leq(constants[1], constants[2]), constants[6]/constants[18]);
    computedConstants[117] = pow(leq(constants[1], constants[2]), pow(constants[6], constants[18]));
    computedConstants[118] = pow(leq(constants[1], constants[2]), pow(constants[6], 1.0/constants[18]));
    computedConstants[119] = sqrt(constants[1]);
    computedConstants[120] = sqrt(constants[1]);
    computedConstants[121] = pow(constants[1], 1.0/3.0);
    computedConstants[122] = pow(constants[1], 1.0/constants[2]);
    computedConstants[123] = pow(lt(constants[1], constants[2]), 1.0/gt(constants[18], constants[6]));
    computedConstants[124] = pow(constants[1]+constants[2], 1.0/gt(constants[18], constants[6]));
    computedConstants[125] = pow(constants[1], 1.0/gt(constants[6], constants[2]));
    computedConstants[126] = pow(constants[1]-constants[2], 1.0/gt(constants[18], constants[6]));
    computedConstants[127] = pow(-constants[1], 1.0/gt(constants[6], constants[2]));
    computedConstants[128] = pow(constants[1]*constants[2], 1.0/gt(constants[18], constants[6]));
    computedConstants[129] = pow(constants[1]/constants[2], 1.0/gt(constants[18], constants[6]));
    computedConstants[130] = pow(lt(constants[1], constants[2]), 1.0/(constants[6]+constants[18]));
    computedConstants[131] = pow(lt(constants[1], constants[2]), 1.0/constants[6]);
    computedConstants[132] = pow(lt(constants[1], constants[2]), 1.0/(constants[6]-constants[18]));
    computedConstants[133] = pow(lt(constants[1], constants[2]), 1.0/-constants[6]);
    computedConstants[134] = pow(lt(constants[1], constants[2]), 1.0/(constants[6]*constants[18]));
    computedConstants[135] = pow(lt(constants[1], constants[2]), 1.0/(constants[6]/constants[18]));
    computedConstants[136] = pow(lt(constants[1], constants[2]), 1.0/pow(constants[6], constants[18]));
    computedConstants[137] = pow(lt(constants[1], constants[2]), 1.0/pow(constants[6], 1.0/constants[18]));
    computedConstants[138] = fabs(constants[1]);
    computedConstants[139] = exp(constants[1]);
    computedConstants[140] = log(constants[1]);
    computedConstants[141] = log10(constants[1]);
    computedConstants[142] = log(constants[1])/log(2.0);
    computedConstants[143] = log10(constants[1]);
    computedConstants[144] = log(constants[1])/log(constants[2]);
    computedConstants[145] = ceil(constants[1]);
    computedConstants[146] = floor(constants[1]);
    computedConstants[147] = min(constants[1], constants[2]);
    computedConstants[148] = min(constants[1], min(constants[2], constants[6]));
    computedConstants[149] = max(constants[1], constants[2]);
    computedConstants[150] = max(constants[1], max(constants[2], constants[6]));
    computedConstants[151] = fmod(constants[1], constants[2]);
    computedConstants[152] = sin(constants[1]);
    computedConstants[153] = cos(constants[1]);
    computedConstants[154] = tan(constants[1]);
    computedConstants[155] = sec(constants[1]);
    computedConstants[156] = csc(constants[1]);
    computedConstants[157] = cot(constants[1]);
    computedConstants[158] = sinh(constants[1]);
    computedConstants[159] = cosh(constants[1]);
    computedConstants[160] = tanh(constants[1]);
    computedConstants[161] = sech(constants[1]);
    computedConstants[162] = csch(constants[1]);
    computedConstants[163] = coth(constants[1]);
    computedConstants[164] = asin(constants[1]);
    computedConstants[165] = acos(constants[1]);
    computedConstants[166] = atan(constants[1]);
    computedConstants[167] = asec(constants[1]);
    computedConstants[168] = acsc(constants[1]);
    computedConstants[169] = acot(constants[1]);
    computedConstants[170] = asinh(constants[1]);
    computedConstants[171] = acosh(constants[1]);
    computedConstants[172] = atanh(constants[1]/2.0);
    computedConstants[173] = asech(constants[1]);
    computedConstants[174] = acsch(constants[1]);
    computedConstants[175] = acoth(2.0*constants[1]);
    computedConstants[176] = (gt(constants[1], constants[2]))?constants[1]:NAN;
    computedConstants[177] = (gt(constants[1], constants[2]))?constants[1]:constants[6];
    computedConstants[178] = (gt(constants[1], constants[2]))?constants[1]:(gt(constants[6], constants[18]))?constants[6]:(gt(constants[179], constants[180]))?constants[179]:NAN;
    computedConstants[181] = (gt(constants[1], constants[2]))?constants[1]:(gt(constants[6], constants[18]))?constants[6]:(gt(constants[179], constants[180]))?constants[179]:constants[182];
    computedConstants[183] = 123.0+((gt(constants[1], constants[2]))?constants[1]:NAN);
    computedConstants[188] = constants[1];
    computedConstants[195] = and(constants[1], constants[2])+((gt(constants[6], constants[18]))?constants[2]:NAN)+constants[179]+and(constants[180], constants[182]);
    computedConstants[196] = and(constants[1], constants[2])-(((gt(constants[6], constants[18]))?constants[2]:NAN)-(constants[179]-((gt(constants[6], constants[18]))?constants[2]:NAN)))-and(constants[180], constants[182]);
    computedConstants[197] = and(constants[1], constants[2])*((gt(constants[6], constants[18]))?constants[2]:NAN)*constants[179]*((gt(constants[6], constants[18]))?constants[2]:NAN)*and(constants[180], constants[182]);
    computedConstants[198] = and(constants[1], constants[2])/(((gt(constants[6], constants[18]))?constants[2]:NAN)/(constants[179]/((gt(constants[6], constants[18]))?constants[2]:NAN)));
    computedConstants[199] = and(or(constants[1], constants[2]), and(xor(constants[1], constants[2]), and((gt(constants[6], constants[18]))?constants[2]:NAN, and(and(and(constants[179], (gt(constants[6], constants[18]))?constants[2]:NAN), xor(constants[1], constants[2])), or(constants[1], constants[2])))));
    computedConstants[200] = or(and(constants[1], constants[2]), or(xor(constants[1], constants[2]), or((gt(constants[6], constants[18]))?constants[2]:NAN, or(or(or(constants[179], (gt(constants[6], constants[18]))?constants[2]:NAN), xor(constants[1], constants[2])), and(constants[1], constants[2])))));
    computedConstants[201] = xor(and(constants[1], constants[2]), xor(or(constants[1], constants[2]), xor((gt(constants[6], constants[18]))?constants[2]:NAN, xor(xor(xor(constants[179], (gt(constants[6], constants[18]))?constants[2]:NAN), or(constants[1], constants[2])), and(constants[1], constants[2])))));
    computedConstants[202] = pow(and(constants[1], constants[2]), pow((gt(constants[6], constants[18]))?constants[2]:NAN, pow(pow(constants[179], (gt(constants[6], constants[18]))?constants[2]:NAN), and(constants[1], constants[2]))));
    computedConstants[203] = pow(pow(pow(and(constants[1], constants[2]), 1.0/pow((gt(constants[6], constants[18]))?constants[2]:NAN, 1.0/constants[179])), 1.0/((gt(constants[6], constants[18]))?constants[2]:NAN)), 1.0/and(constants[1], constants[2]));
    computedConstants[204] = -and(constants[1], constants[2])+-((gt(constants[6], constants[18]))?constants[2]:NAN);
}

void computeRates(double voi, double *states, double *rates, double *constants, double *computedConstants, double *algebraic)
{
    rates[0] = 1.0;
}

void computeVariables(double voi, double *states, double *rates, double *constants, double *computedConstants, double *algebraic)
{
    findRoot0(voi, states, rates, variables);
}
